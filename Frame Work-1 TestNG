// setup TestNg for eclipse
To download -> Eclipse / Help /eclipse workspace / search TestNG(instal) / next(agreement) / restart.
To check installed or not -> Window / preferences / search TestNG / got means installed.

// Start with New Project in Eclipse
* New / Project / JAVA PROJECT(next) / Enter name(finish) / skip pop-up.
* Src / create package / Enter name(finish)
* In Package / crate class.

TestNg will run without main method - by using Test anoation.(Add testNG libraries & import package [org.testng.annotations.Test;])
@Test
	public void demo() {
		System.out.println("Rahul");
	}
note:- we can create multiple test cases in single class.


//To create XML file in a project / suite file to run project.
* right click on project -> TestNG -> convert to testNG(xml file will generate at down) -> from there we can run all test cases.

//we can run multiple classes & separate test case in single class through XML.(Include/Exclude methods) 
example :- 
<suite>
<test name="AirApiReport-TestExecution">                                                [ simply giving one name]
        <classes>                              
            <class name="com.odysol.webautomation.affiliates.test.AirApiReportTest">    [ class name]
                <methods>
                    <include name="Ody2AirRSLogReport"/>
                </methods>
            </class>
        </classes>
    </test>
</suite>
note :- *  we can use regular expression in names ( <include name="mobile.*"/> the method name which will start from mobile will execute).
        *  like that we can execute full package. by passing <packages> <package name="test"/> </packages> instead of <classes> 

TestNG Annotations
1 - > @BeforeMethod and @AfterMethod
	@BeforeMethod allows the method to execute before the execution of each @Test methods.
	@afterMethod is executed after the execution of each @Test methods. 

2 -> @BeforeClass and @AfterClass
	@BeforeClass will execute only once before the first test method in that particular class is invoked
	@AfterClass annotation will be executed only once, after all the test methods of that particular class have been invoked.

3 - > @BeforeTest and @AfterTest
	@BeforeTest methods run after @beforeSuite. For frameworks like smoke testing, @BeforeTest is used for creating an initial data set up and prior to running other test methods.
	@AfterTest annotation will run after the other tests are complete.

4 - > @BeforeSuite and @AfterSuite
	@BeforeSuite annotation, we can set up and start the Selenium Webdrivers
	@AfterSuite annotation is used to stop the Selenium Webdrivers.

Groups Functionality ->
	In @Test annoation we can pass the parameter like groups="anyname" -> it will helpful when we want to run only few test in whole framework.
	IN test => @Test(dataProvider = "genericDataProvider", testName = "ODY-18 : B2B Add Open Segment Add Ons+Perform Check Availability", groups = {
			"ODY-18" })
	XML =>
	<suite name="Loan Department">
		<parameter name="URL" value="www.sdvc"/>
		<test name="Regression">
			<groups>
				<run>
					<include name="Smoke"/>
				</run>
			</groups>
		<classes>
			<class name="test.day1"/> (All test folders)
				<methods> 
					<include name="saveForLater"/>
				<methods/>
			<class name="test.day2"/>
			<class name="test.day4"/>
			<class name="test.day3"/>
		</classes>
		</test>
	</suite>
note:- After group Include and exclude in xml.

Dependent Attribute which can pass in test annation =>
like groups we have multiple attribute while execting.

1) @Test(dependsOnMethods="passTheOtherMethodWhichNeedToExecuteFirst","ifWeWantTwoMethodsToExecuteThenPassThatNameHere")
	The methods which we passed in parameter will execte 1st

2) @Test(enabled=false)
	This test case will be escaped if it's fail also. make the pass of whole scenario.

3) @Test(timeout=4000)
	If the script take more time to execute then we can put in parameter.(It will wait for 4sec)

Parameterising TestNg =>
	If we want to declare URL or Username in global level in suite xml. like property file
	IN XML =>><parameter name="URL" value="www.sdvc"/> as mentioned above xml file need to add the key and value in xml file.

	In test Case => in parameter need to add
	@Test(dataProvider = "genericDataProvider", testName = "ODY-2 : B2B Cruise Only Test With Verification", groups = {
			"smoke", "ODY-2"})
	@Parameters({"DPCP-TestData", "cruiseOnly","URL"})
	public void cruiseOnlyTestWithVerification(Node node, WebDriverActions actions) throws Exception {


DATA PROVIDER ANNOATION =>
	If we want to execute 3 sets of data for different scenarios then instead of declaring every time create one method and store there
	from there take data what you want for that scenario.

1st need to add data like this in one method then need to call in test case.
@DataProvider
public Object[][] getData()
{
	//i stands for number of times testcase should run
	//j stands for no of parametrs it should send for one go
	Object[][] data=new Object[3][3];
	data[0][0]="1abcd";
	data[0][1]="1xyz";
	data[0][2]="1dsaf";
	
	
	data[1][0]="2abcd";
	data[1][1]="2xyz";
	data[1][2]="2dsaf";
	
	data[2][0]="3abcd";
	data[2][1]="3xyz";
	data[2][2]="3dsaf";

it will execute for there time with different data sets.
@Test(dataProvider="getData")
	public void Userid(String username,String password,String id)
	{
		System.out.println("This block executes before each Test");
		System.out.println(username);
		System.out.println(password);
		  System.out.println(id);
		
		
	}
